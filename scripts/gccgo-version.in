#!/bin/sh
# Copyright (c) 2012-2022 Alexander Chernov <cher@ejudge.ru>

# compiler script interface is as follows
# <comp>-version [OPTION]
# OPTION is:
#  -r P fully check the availability of the compiler (like configure
#       script does). P is a proposed path to the compiler (like in
#       --with-<comp> configure option).
#       returns failure (exit code 1), if the compiler is not available
#       or is not functional.
#       in case of success exit code is 0, and the necessary configuration
#       variables are written to stdout.
#  -v   verbose operation (configure mode)
#  -l   output the compiler name to the stdout (list mode)
#  -p   write to the stdout the command line of the compiler
#  -f   write the compiler full name and the compiler version

LANG_CONFIG_DIR="@lang_config_dir@"

common_config() {
  echo 'long_name="go"'
  echo 'src_sfx=".go"'
  echo 'arch="linux-shared"'
}

failure() {
  rm -f conftest*
  echo 'version='
  echo 'arg="'"${arg}"'"'
  common_config
  echo 'GORUN=false'
  echo 'GODIR='
  [ "${verbose}" = 1 ] && echo "no" >&2
  exit 1
}

unset LANG
unset LC_ALL
unset LC_MESSAGES
unset LANGUAGE

if [ x"$1" = x-v ]
then
  verbose=1
  shift
fi

# recheck the language
if [ x"$1" = x-r ]
then
  arg="$2"
  [ x"$2" != x ] && GORUN="$2"
  [ "${GORUN}" = "" ] && GORUN="go"

  [ "${verbose}" = 1 ] && echo -n "checking whether go is available... " >&2
  "${GORUN}" version >/dev/null 2>&1 || failure
  version=`"${GORUN}" version 2>&1 | grep "go version" | gawk '{ print $3; }'`|| failure
  cat > conftest.go <<EOF
package main
func main() {
}
EOF
  "${GORUN}" build -o conftest conftest.go >/dev/null 2>&1 || failure
  [ -x conftest ] || failure
  ./conftest >/dev/null 2>&1 || failure

  rm -f ./conftest*
  GODIR=`dirname "${GORUN}"`
  [ "${GODIR}" = . ] && GODIR=""
  echo 'version="'"${version}"'"'
  echo 'arg="'"${arg}"'"'
  common_config
  echo 'GORUN="'"${GORUN}"'"'
  echo 'GODIR="'"${GODIR}"'"'
  [ "${verbose}" = 1 ] && echo "yes, ${GORUN}, ${version}" >&2
  exit 0
fi

if [ x"$1" = x-l ]
then
  echo "go compiler [http://gcc.gnu.org]"
  exit 0
fi

[ "${EJUDGE_LANG_CONFIG}" = "" ] && EJUDGE_LANG_CONFIG="${LANG_CONFIG_DIR}/gccgo.cfg"

if [ -f "${EJUDGE_LANG_CONFIG}" ]
then
  . "${EJUDGE_LANG_CONFIG}"
else
  GORUN="go"
  GODIR=
fi

if [ x"${GORUN}" = x -o x"${GORUN}" = xfalse ]
then
  echo "This language is not supported." >&2
  exit 1
fi

if [ x"${GODIR}" != x ]
then
    PATH="${GODIR}:${PATH}"
fi

if [ x"$1" = x-p ]
then
    echo "${GORUN}"
    exit 0
fi
    
"${GORUN}" version >/dev/null 2>&1 || exit 1

[ x"$1" = x-f ] && echo -n "go "

"${GORUN}" version 2>&1 | grep "go version" | gawk '{ print $3; }'
