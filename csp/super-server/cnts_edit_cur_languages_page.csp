<%
%><%@include "includes.csp"
%><%
#include "ejudge/cJSON.h"
#include "ejudge/json_serializers.h"
%><%@set getter_name = "csp_get_cnts_edit_cur_languages_page"
%><%@set ac_prefix = "SSERV_CMD_"
%><%@set err_prefix = "SSERV_ERR_"
%><%@page csp_view_cnts_edit_cur_languages_page(PageInterface *pg, FILE *log_f, FILE *out_f, struct http_request_info *phr)
%><%@include "stdvars.csp"
%><%
    unsigned char subtitle_buf[1024];
    const unsigned char *title = 0;
    const unsigned char *subtitle = subtitle_buf;
    opcap_t caps = 0;
    int row = 1;
    int cur_page = 3;
    unsigned char cs_conf_file[PATH_MAX];
    unsigned char num_buf[1024];
    unsigned char *env = 0;
    unsigned char onclickstr_buf[128];
    size_t text_z = 0;
    char *text_s = NULL;
    FILE *text_f = NULL;
    cJSON *jl = NULL;
    char *jstr = NULL;

static const unsigned char head_row_attr[] =
  " bgcolor=\"#a0a0a0\"";
static const unsigned char * const form_row_attrs[]=
{
  " bgcolor=\"#d0d0d0\"",
  " bgcolor=\"#e0e0e0\"",
};

    if (phr->priv_level != PRIV_LEVEL_ADMIN) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (ejudge_cfg_opcaps_find(phr->config, phr->login, &caps) < 0) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (opcaps_check(caps, OPCAP_EDIT_CONTEST) < 0) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (!phr->ss->edited_cnts) FAIL(SSERV_ERR_CONTEST_NOT_EDITED);

    snprintf(subtitle_buf, sizeof(subtitle_buf), "editing serve.cfg, programming languages");
    cnts = phr->ss->edited_cnts;
    struct section_global_data *global = phr->ss->global;
%><%@include "header_jqgrid.csp"
%>

<%@include "cnts_edit_cur_top_menu.csp"
%>

<%
  if (phr->ss->serve_parse_errors) {
%>
<h2><tt>serve.cfg</tt> cannot be edited</h2>
<font color="red"><pre><s:v value="phr->ss->serve_parse_errors" /></pre></font>
<%
    goto bottom_links;
  }
%>

<%
  if (!global) {
%>
<h2>No current global settings!</h2>
<%
    goto bottom_links;
  }
%><%
  if (global->enable_language_import > 0) {
    goto new_language_page;
  }
%><%
  if (phr->ss->disable_compilation_server) {
%>
<h2>Compilation server is disabled!</h2>
<p>Enable compilation server on &quot;Global settings&qout; tab.</p>
<%
    goto bottom_links;
  }
%>
<%
  if (!phr->ss->cs_langs_loaded) {
    super_load_cs_languages(phr->config, phr->ss, global->extra_compile_dirs, 1, cs_conf_file, sizeof(cs_conf_file));
  }
%>
<%
  if (!phr->ss->cs_langs) {
%>
<h2>The standard compilation server is not available!</h2>
<%
    goto bottom_links;
  }
%>

<div id="LimitsDialogDiv" title="Compilation Limits" style="overflow: auto;">
    <s:form id="LimitsDialogForm">
        <s:hidden name="action" ac="glob-save-limits-form" />
        <div id="limits-compile_max_vm_size-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="limits-compile_max_vm_size">Maximum VM size for compilers:</label></div>
            <input type="text" size="20" name="compile_max_vm_size" id="limits-compile_max_vm_size" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="limits-compile_max_stack_size-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="limits-compile_max_stack_size">Maximum Stack size for compilers:</label></div>
            <input type="text" size="20" name="compile_max_stack_size" id="limits-compile_max_stack_size" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="limits-compile_max_file_size-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="limits-compile_max_file_size">Maximum File size for compilers:</label></div>
            <input type="text" size="20" name="compile_max_file_size" id="limits-compile_max_file_size" value="" class="text ui-widget-content ui-corner-all" />
        </div>
    </s:form>
</div>

<div id="MainDialogDiv" title="Translator Properties" style="overflow: auto;">
    <s:form id="MainDialogForm">
        <s:hidden name="action" ac="lang-save-main-form" />

        <div id="main-lang_id-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-lang_id">Language ID:</label></div>
            <input readonly="readonly" type="text" size="20" name="lang_id" id="main-lang_id" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-compile_id-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-compile_id">Language compile ID:</label></div>
            <input readonly="readonly" type="text" size="20" name="compile_id" id="main-compile_id" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-short_name-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-short_name">Language short name:</label></div>
            <input readonly="readonly" type="text" size="20" name="short_name" id="main-short_name" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-arch-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-arch">Language architecture:</label></div>
            <input readonly="readonly" type="text" size="20" name="arch" id="main-arch" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-src_sfx-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-src_sfx">Suffix of the source files:</label></div>
            <input readonly="readonly" type="text" size="20" name="src_sfx" id="main-src_sfx" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-exe_sfx-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-exe_sfx">Suffix of the executable files:</label></div>
            <input readonly="readonly" type="text" size="20" name="exe_sfx" id="main-exe_sfx" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-long_name-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-long_name">Language long name:</label></div>
            <input type="text" size="20" name="long_name" id="main-long_name" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-extid-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-extid">Language external name:</label></div>
            <input type="text" size="20" name="extid" id="main-extid" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-disabled-div">
            <div style="width: 300px; display: inline-block;"><label for="main-disabled">Disable this language for participants:</label></div>
            <input type="checkbox" name="disabled" id="main-disabled" value="1" />
        </div>
        <div id="main-insecure-div">
            <div style="width: 300px; display: inline-block;"><label for="main-insecure">This language is insecure:</label></div>
            <input type="checkbox" name="insecure" id="main-insecure" value="1" />
        </div>
        <div id="main-disable_security-div">
            <div style="width: 300px; display: inline-block;"><label for="main-disable_security">Disable security restrictions:</label></div>
            <input type="checkbox" name="disable_security" id="main-disable_security" value="1" />
        </div>
        <div id="main-enable_suid_run-div">
            <div style="width: 300px; display: inline-block;"><label for="main-enable_suid_run">Enable SUID helper:</label></div>
            <input type="checkbox" name="enable_suid_run" id="main-enable_suid_run" value="1" />
        </div>
        <div id="main-disable_testing-div">
            <div style="width: 300px; display: inline-block;"><label for="main-disable_testing">Disable any testing of submissions:</label></div>
            <input type="checkbox" name="disable_testing" id="main-disable_testing" value="1" onchange="mainDialogOnChange()" />
        </div>
        <div id="main-disable_auto_testing-div">
            <div style="width: 300px; display: inline-block;"><label for="main-disable_auto_testing">Disable automatic testing of submissions:</label></div>
            <input type="checkbox" name="disable_auto_testing" id="main-disable_auto_testing" value="1" />
        </div>
        <div id="main-binary-div">
            <div style="width: 300px; display: inline-block;"><label for="main-binary">Language source files are binary:</label></div>
            <input type="checkbox" name="binary" id="main-binary" value="1" onchange="mainDialogOnChange()" />
        </div>
        <div id="main-is_dos-div">
            <div style="width: 300px; display: inline-block;"><label for="main-is_dos">Perform UNIX-&gt;DOS conversion:</label></div>
            <input type="checkbox" name="is_dos" id="main-is_dos" value="1" />
        </div>
        <div id="main-enable_ejudge_env-div">
            <div style="width: 300px; display: inline-block;"><label for="main-enable_ejudge_env">Pass ejudge-specific env at runtime:</label></div>
            <input type="checkbox" name="enable_ejudge_env" id="main-enable_ejudge_env" value="1" />
        </div>
        <div id="main-preserve_line_numbers-div">
            <div style="width: 300px; display: inline-block;"><label for="main-preserve_line_numbers">Preserve line numbers in runtime:</label></div>
            <input type="checkbox" name="preserve_line_numbers" id="main-preserve_line_numbers" value="1" />
        </div>
        <div id="main-max_vm_size-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-max_vm_size">Maximum VM size:</label></div>
            <input type="text" size="20" name="max_vm_size" id="main-max_vm_size" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-max_stack_size-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-max_stack_size">Maximum stack size:</label></div>
            <input type="text" size="20" name="max_stack_size" id="main-max_stack_size" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-max_file_size-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-max_file_size">Maximum file size:</label></div>
            <input type="text" size="20" name="max_file_size" id="main-max_file_size" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-content_type-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-content_type">Content type for files:</label></div>
            <input type="text" size="20" name="content_type" id="main-content_type" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-style_checker_cmd-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-style_checker_cmd">Style checker command:</label></div>
            <input type="text" size="20" name="style_checker_cmd" id="main-style_checker_cmd" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-style_checker_env-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-style_checker_env">Style checker environment:</label></div>
            <input type="text" size="20" name="style_checker_env" id="main-style_checker_env" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-opts-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-opts">Additional compilation options:</label></div>
            <input type="text" size="20" name="opts" id="main-opts" value="" class="text ui-widget-content ui-corner-all" />
        </div>
        <div id="main-libs-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="main-libs">Additional libraries:</label></div>
            <input type="text" size="20" name="libs" id="main-libs" value="" class="text ui-widget-content ui-corner-all" />
        </div>
    </s:form>
</div>

<script type="text/javascript">
$(function() {
    limitsDialog = $("#LimitsDialogDiv").dialog({
        autoOpen: false,
        height: 350,
        width: 650,
        modal: true,
        buttons: {
            "Save": function() {
                var postData = $("#LimitsDialogForm").serialize();
                var formURL = $("#LimitsDialogForm").attr("action");
                $.ajax({
                    url : formURL,
                    type: "POST",
                    data : postData,
                    success:function(data, textStatus, jqXHR) {
                        //data: return data from server
                        document.location.reload(true);
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        //if fails
                    }
                });
            },
            Cancel: function() {
                limitsDialog.dialog("close");
            }
        },
        close : function() {
        }
    });

    mainDialog = $("#MainDialogDiv").dialog({
        autoOpen: false,
        height: 650,
        width: 650,
        modal: true,
        buttons: {
            "Save": function() {
                var postData = $("#MainDialogForm").serialize();
                var formURL = $("#MainDialogForm").attr("action");
                $.ajax({
                    url : formURL,
                    type: "POST",
                    data : postData,
                    success:function(data, textStatus, jqXHR) {
                        //data: return data from server
                        document.location.reload(true);
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        //if fails
                    }
                });
            },
            Cancel: function() {
                mainDialog.dialog("close");
            }
        },
        close : function() {
        }
    });
});

function np(e)
{
    if (e) e.stopPropagation();
}

function copyCheckbox(dst, src)
{
    var dstobj = document.getElementById(dst);
    var srcobj = document.getElementById(src);
    if (dstobj != null) {
        if (srcobj != null && srcobj.value == "1") {
            dstobj.checked = true;
        } else {
            dstobj.checked = false;
        }
    }
}

function popupLimitsDialog(e, skipField)
{
    $("#limits-compile_max_vm_size").val($("#orig-compile_max_vm_size").val());
    $("#limits-compile_max_stack_size").val($("#orig-compile_max_stack_size").val());
    $("#limits-compile_max_file_size").val($("#orig-compile_max_file_size").val());

    if (e) e.stopPropagation();
    limitsDialogOnChange();
    $("#LimitsDialogDiv").dialog('open');
}

function limitsDialogOnChange()
{
}

function popupMainDialog(compile_id, e, skipField)
{
    $("#main-lang_id").val($("#orig-lang_id-" + compile_id).val());
    $("#main-compile_id").val($("#orig-compile_id-" + compile_id).val());
    $("#main-short_name").val($("#orig-short_name-" + compile_id).val());
    $("#main-arch").val($("#orig-arch-" + compile_id).val());
    $("#main-src_sfx").val($("#orig-src_sfx-" + compile_id).val());
    $("#main-exe_sfx").val($("#orig-exe_sfx-" + compile_id).val());
    $("#main-long_name").val($("#orig-long_name-" + compile_id).val());
    $("#main-extid").val($("#orig-extid-" + compile_id).val());
    copyCheckbox("main-disabled", "orig-disabled-" + compile_id);
    copyCheckbox("main-insecure", "orig-insecure-" + compile_id);
    copyCheckbox("main-enable_ejudge_env", "orig-enable_ejudge_env-" + compile_id);
    copyCheckbox("main-preserve_line_numbers", "orig-preserve_line_numbers-" + compile_id);
    copyCheckbox("main-disable_security", "orig-disable_security-" + compile_id);
    copyCheckbox("main-enable_suid_run", "orig-enable_suid_run-" + compile_id);
    copyCheckbox("main-disable_testing", "orig-disable_testing-" + compile_id);
    copyCheckbox("main-disable_auto_testing", "orig-disable_auto_testing-" + compile_id);
    copyCheckbox("main-binary", "orig-binary-" + compile_id);
    copyCheckbox("main-is_dos", "orig-is_dos-" + compile_id);
    $("#main-max_vm_size").val($("#orig-max_vm_size-" + compile_id).val());
    $("#main-max_stack_size").val($("#orig-max_stack_size-" + compile_id).val());
    $("#main-max_file_size").val($("#orig-max_file_size-" + compile_id).val());
    $("#main-content_type").val($("#orig-content_type-" + compile_id).val());
    $("#main-style_checker_cmd").val($("#orig-style_checker_cmd-" + compile_id).val());
    $("#main-style_checker_env").val($("#orig-style_checker_env-" + compile_id).val());
    $("#main-opts").val($("#orig-opts-" + compile_id).val());
    $("#main-libs").val($("#orig-libs-" + compile_id).val());

    if (skipField != null) {
        obj = document.getElementById("main-" + skipField);
        if (obj != null) {
            obj.value = "";
        }
    }

    if (e) e.stopPropagation();
    mainDialogOnChange();
    $("#MainDialogDiv").dialog('open');
}

function mainDialogOnChange()
{
    $("#main-disable_auto_testing-div").toggle(!$("#main-disable_testing").is(':checked'));
    $("#main-content_type-div").toggle($("#main-binary").is(':checked'));
}
</script>

<script type="text/javascript">
<%
    int lang_ajax_action_2 = SSERV_CMD_LANG_AJAX_ACTION;
%>
function newLanguageEnableImport()
{
    $.ajax({
        url : '<s:v value="phr->self_url" escape="false" />',
        type: "POST",
        data: {
            SID: '<s:v value="phr->session_id" />',
            action: '<s:v value="lang_ajax_action_2" />',
            lang_id: 0,
            oper: 'enable_import'
        },
        contentType: "application/x-www-form-urlencoded; charset=utf-8",
        dataType: "json",
        success:function(data, textStatus, jqXHR) {
            if (data.ok) {
                document.location.reload(true);
            }
        },
        error: function(jqXHR, textStatus, errorThrown) {
        }
    });

}
</script>

<table border="0">

    <s:tr attr="head_row_attr">
        <td colspan="5" align="center">Compilation server integration <b style="color: red;">DISABLED</b>. <button onclick="newLanguageEnableImport()">Enable</button></td>
    </s:tr>

<%
  if (phr->ss->enable_language_import_changed) {
%>
    <s:tr attr="head_row_attr">
        <td colspan="5" align="center">You must commit changed and reopen contest to enable editing of languages!</td>
    </s:tr>
<%
    goto bottom_links;
  }
%>

    <s:tr attr="head_row_attr" onclick="popupLimitsDialog()">
        <td colspan="5" align="center"><b>Compilation limitations</b></td>
    </s:tr>

<%
  num_buf[0] = 0;
  if (global->compile_max_vm_size > 0) {
    ll_to_size_str(num_buf, sizeof(num_buf), global->compile_max_vm_size);
  }
%>
    <s:tr id="orig-compile_max_vm_size-div" attr="form_row_attrs[row ^= 1]" onclick="popupLimitsDialog()">
        <td colspan="2">Maximum VM size for compilers:</td>
        <td><s:textfield id="orig-compile_max_vm_size" readonly="readonly" name="param" value="num_buf" size="48" maxlength="1024" check="no" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:global:compile_max_vm_size" /></td>
    </s:tr>

<%
  num_buf[0] = 0;
  if (global->compile_max_stack_size > 0) {
    ll_to_size_str(num_buf, sizeof(num_buf), global->compile_max_stack_size);
  }
%>
    <s:tr id="orig-compile_max_stack_size-div" attr="form_row_attrs[row ^= 1]" onclick="popupLimitsDialog()">
        <td colspan="2">Maximum stack size for compilers:</td>
        <td><s:textfield id="orig-compile_max_stack_size" readonly="readonly" name="param" value="num_buf" size="48" maxlength="1024" check="no" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:global:compile_max_stack_size" /></td>
    </s:tr>

<%
  num_buf[0] = 0;
  if (global->compile_max_file_size > 0) {
    ll_to_size_str(num_buf, sizeof(num_buf), global->compile_max_file_size);
  }
%>
    <s:tr id="orig-compile_max_file_size-div" attr="form_row_attrs[row ^= 1]" onclick="popupLimitsDialog()">
        <td colspan="2">Maximum file size for compilers:</td>
        <td><s:textfield id="orig-compile_max_file_size" readonly="readonly" name="param" value="num_buf" size="48" maxlength="1024" check="no" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:global:compile_max_file_size" /></td>
    </s:tr>

    <s:tr attr="head_row_attr">
        <td colspan="5" align="center"><b>Available compilers</b></td>
    </s:tr>

<%
  int i;
  for (i = 1; i < phr->ss->cs_lang_total; ++i) {
    const struct section_language_data *cs_lang = phr->ss->cs_langs[i];
    if (!cs_lang) continue;
    if (!phr->ss->cs_lang_names[i]) continue;
    if (!*phr->ss->cs_lang_names[i]) continue;
    struct section_language_data *lang = 0;
    if (phr->ss->cs_loc_map[i] > 0) lang = phr->ss->langs[phr->ss->cs_loc_map[i]];
    const unsigned char *td_attr = "";
    td_attr = "";
    if (lang && lang->insecure > 0 && global && global->secure_run > 0) {
      td_attr = " bgcolor=\"#ffffdd\"";
    } else if (lang) {
      td_attr = " bgcolor=\"#ddffdd\"";
    }
%>
    <tr>
        <td colspan="3"<s:v value="td_attr" escape="false" />><%
    if (lang && lang->long_name[0]) {
%><b><s:v value="lang->long_name" /></b><%
      if (!phr->ss->cs_lang_names[i]) {
%> <font color="magenta">(No version script!)</font><%
      } else if (!*phr->ss->cs_lang_names[i]) {
%> <font color="red">(Version script failed!)</font><%
      } else {
%> (<s:v value="phr->ss->cs_lang_names[i]" />)<%
      }
    } else if (!phr->ss->cs_lang_names[i]) {
%><b><s:v value="cs_lang->long_name" /></b> <font color="magenta">(No version script!)</font><%
    } else if (!*phr->ss->cs_lang_names[i]) {
%><b><s:v value="cs_lang->long_name" /></b> <font color="red">(Version script failed!)</font><%
    } else {
%><b><s:v value="phr->ss->cs_lang_names[i]" /></b><%
    }
%></td>
        <td<s:v value="td_attr" escape="false" />><s:form><s:hidden name="lang_id" value="i" /><%
    if (lang) {
      if (!phr->ss->lang_flags[lang->id]) {
%><s:submit ac="lang-show-details" label="View details" /><%
      } else {
%><s:submit ac="lang-hide-details" label="Hide details" /><%
      }
      if (!phr->ss->loc_cs_map[lang->id]) {
%><s:submit ac="lang-deactivate" label="Deactivate" /><%
      }
    } else {
%><s:submit ac="lang-activate" label="Activate" /><%
    }
%></s:form></td>
        <td<s:v value="td_attr" escape="false" />>&nbsp;</td>
    </tr>

<%
    if (!lang || !phr->ss->lang_flags[lang->id]) continue;
    //ASSERT(lang->compile_id == i);
    int idsuffix = -lang->compile_id;
    int compile_id = lang->compile_id;
    row = 1;
    snprintf(onclickstr_buf, sizeof(onclickstr_buf), "popupMainDialog(%d)", compile_id);

    if (lang->disabled < 0) lang->disabled = 0;
    if (lang->binary < 0) lang->binary = 0;
    if (lang->insecure < 0) lang->insecure = 0;
    if (lang->disable_security < 0) lang->disable_security = 0;
    if (lang->enable_suid_run < 0) lang->enable_suid_run = 0;
    if (lang->is_dos < 0) lang->is_dos = 0;
    if (lang->disable_auto_testing < 0) lang->disable_auto_testing = 0;
    if (lang->disable_testing < 0) lang->disable_testing = 0;
    if (lang->enable_custom < 0) lang->enable_custom = 0;
    if (lang->enable_ejudge_env < 0) lang->enable_ejudge_env = 0;
    if (lang->preserve_line_numbers < 0) lang->preserve_line_numbers = 0;
    if (lang->default_disabled < 0) lang->default_disabled = 0;
    if (lang->enabled < 0) lang->enabled = 0;
    if (lang->disable_auto_update < 0) lang->disable_auto_update = 0;
%>

    <s:tr id="orig-lang_id-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Language ID:</td>
        <td><s:textfield id="orig-lang_id" idSuffix="idsuffix" readonly="readonly" name="param" value="lang->id" size="48" maxlength="1024" /></td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </s:tr>

    <s:tr id="orig-compile_id-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Compilation server ID:</td>
        <td><s:textfield id="orig-compile_id" idSuffix="idsuffix" readonly="readonly" name="param" value="lang->compile_id" size="48" maxlength="1024" /></td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </s:tr>

    <s:tr id="orig-short_name-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Language short name:</td>
        <td><s:textfield id="orig-short_name" idSuffix="idsuffix" readonly="readonly" name="param" value="lang->short_name" size="48" maxlength="1024" /></td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </s:tr>

    <s:tr id="orig-arch-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Language architecture:</td>
        <td><s:textfield id="orig-arch" idSuffix="idsuffix" readonly="readonly" name="param" value="lang->arch" size="48" maxlength="1024" /><% if (!lang->arch || !lang->arch[0]) { %><i>(Default)</i><% } %></td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </s:tr>

    <s:tr id="orig-src_sfx-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Suffix of the source files:</td>
        <td><s:textfield id="orig-src_sfx" idSuffix="idsuffix" readonly="readonly" name="param" value="lang->src_sfx" size="48" maxlength="1024" /></td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </s:tr>

    <s:tr id="orig-exe_sfx-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Suffix of the executable files:</td>
        <td><s:textfield id="orig-exe_sfx" idSuffix="idsuffix" readonly="readonly" name="param" value="lang->exe_sfx" size="48" maxlength="1024" /><% if (!lang->exe_sfx || !*lang->exe_sfx) { %><i>(Empty)</i><% } %></td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </s:tr>

    <s:tr id="orig-long_name-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Language long name:</td>
        <td><s:textfield id="orig-long_name" idSuffix="idsuffix" readonly="readonly" name="param" value="lang->long_name" size="48" maxlength="1024" checkExpr="" /></td>
        <td><input type="button" onclick="popupMainDialog(<s:v value="compile_id" />, event, 'long_name')" value="Clear" /></td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:long_name" /></td>
    </s:tr>

    <s:tr id="orig-extid-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Language external name:</td>
        <td><s:textfield id="orig-extid" idSuffix="idsuffix" readonly="readonly" name="param" value="lang->extid" size="48" maxlength="1024" checkExpr="" /></td>
        <td><input type="button" onclick="popupMainDialog(<s:v value="compile_id" />, event, 'extid')" value="Clear" /></td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:extid" /></td>
    </s:tr>

    <s:tr id="orig-disabled-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Disable this language for participants:</td>
        <td><s:yesno id="orig-disabled" idSuffix="idsuffix" disabled="disabled" name="param" value="lang->disabled" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:disabled" /></td>
    </s:tr>

    <s:tr id="orig-insecure-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>This language is insecure:</td>
        <td><s:yesno id="orig-insecure" idSuffix="idsuffix" disabled="disabled"  name="param" value="lang->insecure" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:insecure" /></td>
    </s:tr>

    <s:tr id="orig-disable_security-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Disable security restrictions:</td>
        <td><s:yesno id="orig-disable_security" idSuffix="idsuffix" disabled="disabled" name="param" value="lang->disable_security" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:disable_security" /></td>
    </s:tr>

    <s:tr id="orig-enable_suid_run-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Enable SUID helper:</td>
        <td><s:yesno id="orig-enable_suid_run" idSuffix="idsuffix" disabled="disabled" name="param" value="lang->enable_suid_run" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:enable_suid_run" /></td>
    </s:tr>

    <s:tr id="orig-disable_testing-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Disable any testing of submissions:</td>
        <td><s:yesno id="orig-disable_testing" idSuffix="idsuffix" disabled="disabled" name="param" value="lang->disable_testing" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:disable_testing" /></td>
    </s:tr>

    <s:tr id="orig-disable_auto_testing-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf" hiddenExpr="lang->disable_testing > 0" >
        <td width="50">&nbsp;</td>
        <td>Disable automatic testing of submissions:</td>
        <td><s:yesno id="orig-disable_auto_testing" idSuffix="idsuffix" disabled="disabled" name="param" value="lang->disable_auto_testing" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:disable_auto_testing" /></td>
    </s:tr>

    <s:tr id="orig-binary-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Language source files are binary:</td>
        <td><s:yesno id="orig-binary" idSuffix="idsuffix" disabled="disabled" name="param" value="lang->binary" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:binary" /></td>
    </s:tr>

    <s:tr id="orig-is_dos-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Perform UNIX->DOS conversion:</td>
        <td><s:yesno id="orig-is_dos" idSuffix="idsuffix" disabled="disabled" name="param" value="lang->is_dos" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:is_dos" /></td>
    </s:tr>

    <s:tr id="orig-enable_ejudge_env-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Enable ejudge env vars:</td>
        <td><s:yesno id="orig-enable_ejudge_env" idSuffix="idsuffix" disabled="disabled"  name="param" value="lang->enable_ejudge_env" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:enable_ejudge_env" /></td>
    </s:tr>

    <s:tr id="orig-preserve_line_numbers-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Preserve line numbers:</td>
        <td><s:yesno id="orig-preserve_line_numbers" idSuffix="idsuffix" disabled="disabled"  name="param" value="lang->preserve_line_numbers" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:preserve_line_numbers" /></td>
    </s:tr>

<%
    num_buf[0] = 0;
    if (lang->max_vm_size > 0) {
      ll_to_size_str(num_buf, sizeof(num_buf), lang->max_vm_size);
    }
%>
    <s:tr id="orig-max_vm_size-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Maximum VM size:</td>
        <td><s:textfield id="orig-max_vm_size" idSuffix="idsuffix" readonly="readonly" name="param" value="num_buf" size="48" maxlength="1024" check="false" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:max_vm_size" /></td>
    </s:tr>

<%
    num_buf[0] = 0;
    if (lang->max_stack_size > 0) {
      ll_to_size_str(num_buf, sizeof(num_buf), lang->max_stack_size);
    }
%>
    <s:tr id="orig-max_stack_size-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Maximum stack size:</td>
        <td><s:textfield id="orig-max_stack_size" idSuffix="idsuffix" readonly="readonly" name="param" value="num_buf" size="48" maxlength="1024" check="false" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:max_stack_size" /></td>
    </s:tr>

<%
    num_buf[0] = 0;
    if (lang->max_file_size > 0) {
      ll_to_size_str(num_buf, sizeof(num_buf), lang->max_file_size);
    }
%>
    <s:tr id="orig-max_file_size-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Maximum file size:</td>
        <td><s:textfield id="orig-max_file_size" idSuffix="idsuffix" readonly="readonly" name="param" value="num_buf" size="48" maxlength="1024" check="false" /></td>
        <td>&nbsp;</td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:max_file_size" /></td>
    </s:tr>

    <s:tr id="orig-content_type-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf" hiddenExpr="lang->binary <= 0">
        <td width="50">&nbsp;</td>
        <td>Content type for files:</td>
        <td><s:textfield id="orig-content_type" idSuffix="idsuffix" readonly="readonly" name="param" value="lang->content_type" size="48" maxlength="1024" checkExpr="" /></td>
        <td><input type="button" onclick="popupMainDialog(<s:v value="compile_id" />, event, 'content_type')" value="Clear" /></td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:content_type" /></td>
    </s:tr>

    <s:tr id="orig-style_checker_cmd-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Style checker command:</td>
        <td><s:textfield id="orig-style_checker_cmd" idSuffix="idsuffix" readonly="readonly" name="param" value="lang->style_checker_cmd" size="48" maxlength="1024" checkExpr="" /></td>
        <td><input type="button" onclick="popupMainDialog(<s:v value="compile_id" />, event, 'style_checker_cmd')" value="Clear" /></td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:style_checker_cmd" /></td>
    </s:tr>

<%
    env = 0;
    if (lang->style_checker_env && lang->style_checker_env[0]) {
      env = sarray_unparse(lang->style_checker_env);
    }
%>
    <s:tr id="orig-style_checker_env-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Style checker environment:</td>
        <td><s:textfield id="orig-style_checker_env" idSuffix="idsuffix" readonly="readonly" name="param" value="env" size="48" maxlength="1024" checkExpr="" /></td>
        <td><input type="button" onclick="popupMainDialog(<s:v value="compile_id" />, event, 'style_checker_env')" value="Clear" /></td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:style_checker_env" /></td>
    </s:tr>
<%
    xfree(env); env = 0;
%>

    <s:tr id="orig-opts-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Additional compilation options:</td>
        <td><s:textfield id="orig-opts" idSuffix="idsuffix" readonly="readonly" name="param" value="phr->ss->lang_opts[lang->id]" size="48" maxlength="1024" checkExpr="" /></td>
        <td><input type="button" onclick="popupMainDialog(<s:v value="compile_id" />, event, 'opts')" value="Clear" /></td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:opts" /></td>
    </s:tr>

    <s:tr id="orig-libs-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" onclickExpr="onclickstr_buf">
        <td width="50">&nbsp;</td>
        <td>Additional libraries:</td>
        <td><s:textfield id="orig-libs" idSuffix="idsuffix" readonly="readonly" name="param" value="phr->ss->lang_libs[lang->id]" size="48" maxlength="1024" checkExpr="" /></td>
        <td><input type="button" onclick="popupMainDialog(<s:v value="compile_id" />, event, 'libs')" value="Clear" /></td>
        <td onclick="np(event);"><s:help topic="Serve.cfg:language:libs" /></td>
    </s:tr>

<%
    if (lang->unhandled_vars) {
      row = 1;
%>
    <s:tr attr="head_row_attr">
        <td width="50">&nbsp;</td>
        <td colspan="4" align="center"><b>Uneditable variables</b></td>
    </s:tr>
    <s:tr attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td colspan="2"><pre><s:v value="lang->unhandled_vars" checkExpr="" /></pre></td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </s:tr>
<%
    }
%>

<%
  }
%>
</table>

<s:form><table><tr><td><s:submit ac="lang-update-versions" label="Update versions" /></td></tr></table></s:form>

<%
bottom_links: ;
%>

<%@include "cnts_edit_cur_bottom_menu.csp"
%>

<%@include "footer.csp"
%><%
  goto cleanup;

/* ================== new language page ================== */
new_language_page:;
%>

<script type="text/javascript">
var language_states = {};
</script>

<table border="0">

    <s:tr attr="head_row_attr">
        <td colspan="4" align="center">Compilation server integration <b style="color: green;">ENABLED</b>. <button onclick="newLanguageOper1(0, 'disable_import')">Disable</button></td>
    </s:tr>

    <s:tr attr="head_row_attr">
        <td colspan="4" align="center"><b>Compilation limits</b></td>
    </s:tr>

<%
  jl = cJSON_CreateObject();
  if (global->compile_max_vm_size > 0) {
    cJSON_AddNumberToObject(jl, "global_compile_max_vm_size", global->compile_max_vm_size);
  }
  if (global->compile_max_rss_size > 0) {
    cJSON_AddNumberToObject(jl, "global_compile_max_rss_size", global->compile_max_rss_size);
  }
  if (global->compile_max_stack_size > 0) {
    cJSON_AddNumberToObject(jl, "global_compile_max_stack_size", global->compile_max_stack_size);
  }
  if (global->compile_max_file_size > 0) {
    cJSON_AddNumberToObject(jl, "global_compile_max_file_size", global->compile_max_file_size);
  }
  if (global->compile_server_id && global->compile_server_id[0]) {
    cJSON_AddStringToObject(jl, "global_compile_server_id", global->compile_server_id);
  }
  jstr = cJSON_PrintUnformatted(jl);
%>
<script type="text/javascript">
var global_language_params = <s:v value="jstr" escape="false" />;
</script>
<%
  free(jstr); jstr = NULL;
  cJSON_Delete(jl); jl = NULL;
%>

<%
  if (phr->config->enable_compile_container <= 0) {
%>

    <s:tr id="global_compile_max_vm_size-div" attr="form_row_attrs[row ^= 1]">
        <td colspan="2">Maximum VM size for compilers:</td>
        <td><s:textfield id="global_compile_max_vm_size" name="param" value="global->compile_max_vm_size" format="V" size="48" maxlength="1024" check="no" onchange="newLangGlobalOnChange(this)" /></td>
        <td><s:help icon="yes" topic="Serve.cfg:global:compile_max_vm_size" /></td>
    </s:tr>

    <s:tr id="global_compile_max_rss_size-div" attr="form_row_attrs[row ^= 1]">
        <td colspan="2">Maximum VM size for compilers:</td>
        <td><s:textfield id="global_compile_max_rss_size" name="param" value="global->compile_max_rss_size" format="V" size="48" maxlength="1024" check="no" onchange="newLangGlobalOnChange(this)" /></td>
        <td><s:help icon="yes" topic="Serve.cfg:global:compile_max_rss_size" /></td>
    </s:tr>

    <s:tr id="global_compile_max_stack_size-div" attr="form_row_attrs[row ^= 1]">
        <td colspan="2">Maximum stack size for compilers:</td>
        <td><s:textfield id="global_compile_max_stack_size" name="param" value="global->compile_max_stack_size" format="V" size="48" maxlength="1024" check="no" onchange="newLangGlobalOnChange(this)" /></td>
        <td><s:help icon="yes" topic="Serve.cfg:global:compile_max_stack_size" /></td>
    </s:tr>

<%
  }
%>

    <s:tr id="global_compile_max_file_size-div" attr="form_row_attrs[row ^= 1]">
        <td colspan="2">Maximum file size for compilers:</td>
        <td><s:textfield id="global_compile_max_file_size" name="param" value="global->compile_max_file_size" format="V" size="48" maxlength="1024" check="no" onchange="newLangGlobalOnChange(this)" /></td>
        <td><s:help icon="yes" topic="Serve.cfg:global:compile_max_file_size" /></td>
    </s:tr>

    <s:tr attr="head_row_attr">
        <td colspan="4" align="center"><b>Global compilation server</b></td>
    </s:tr>

<%
      if (phr->ss->cscs && phr->ss->cscs->u > 0) {
        const unsigned char *default_server_id = phr->ss->cscs->v[0].id;
        const unsigned char *cur_server_id = global->compile_server_id;
        const unsigned char *empty = "";
        if (!cur_server_id || !*cur_server_id) cur_server_id = "";
%>

    <s:tr id="global_compile_server_id-div" attr="form_row_attrs[row ^= 1]">
        <td colspan="2" valign="top">Compile queue:</td>
        <td><div><s:select name="global_compile_server_id" id="global_compile_server_id" onchange="newLangGlobalOnChange(this)"><%
%><s:option value="empty" selectedExpr="!strcmp(empty, cur_server_id)">Default</s:option><%
        int serv_i;
        for (serv_i = 0; serv_i < phr->ss->cscs->u; ++serv_i) {
          struct compile_server_config *csc = &phr->ss->cscs->v[serv_i];
          if (!csc->errors) {
%><s:option value="csc->id" selectedExpr="!strcmp(csc->id, cur_server_id)"><s:v value="csc->id" /></s:option><%
          }
        }
%></s:select></div>
        <div style="font-size: 0.75em; color: gray;" ><code><s:v value="default_server_id" checkExpr="" /></code></div>
        </td>
        <td><s:help icon="yes" topic="Serve.cfg:global:compile_server_id" /></td>
    </s:tr>
<%
      }
%>

    <s:tr id="global-button-row-div" hiddenExpr="1" >
        <td colspan="4" style="text-align: center;">
            <span style="margin:0px auto;">
                <button type="button" id="global-button-save" onclick="newLangGlobalSave()">Save <span class="ui-icon ui-icon-save"></span></button>
                <button type="button" id="global-button-cancel" onclick="newLangGlobalCancel()">Cancel <span class="ui-icon ui-icon-cancel"></span></button>
            </span>
        </td>
    </s:tr>

<%
  if (phr->ss->enable_language_import_changed || phr->ss->global_compile_server_id_changed) {
%>
    <s:tr attr="head_row_attr">
        <td colspan="4" align="center">You must commit changed and reopen contest to enable editing of languages!</td>
    </s:tr>
<%
    goto skip_all_new_language_rows;
  }
%>

    <s:tr attr="head_row_attr">
        <td colspan="4" align="center"><b>Available compilers</b></td>
    </s:tr>

<%
  int enable_container = 0;
  if (phr->config->force_container > 0) {
    enable_container = 1;
  } else {
    int prob_id;
    for (prob_id = 0; prob_id < phr->ss->aprob_a; ++prob_id) {
      const struct section_problem_data *aprob = phr->ss->aprobs[prob_id];
      if (aprob && aprob->enable_container > 0) {
        enable_container = 1;
      }
    }
  }

  int lang_id;
  for (lang_id = 0; lang_id < phr->ss->lang_a; ++lang_id) {
    const struct section_language_data *lang = phr->ss->langs[lang_id];
    const struct section_language_data *serv_lang = phr->ss->serv_langs[lang_id];
    struct section_language_data *work_lang = NULL;
    struct section_language_data *act_lang = NULL;
    const unsigned char *td_attr = "";
    unsigned char expanded = 0;
    unsigned char enabled = 0;
    unsigned char more_expanded = 0;
    int idsuffix = -lang_id;
    struct language_extra *lang_extra = &phr->ss->lang_extra[lang_id];
    if (lang) {
      act_lang = prepare_alloc_language();
      prepare_merge_language(act_lang, serv_lang, lang);
      prepare_language_set_defaults(act_lang);
    } else if (serv_lang) {
      // !lang
      act_lang = prepare_alloc_language();
      prepare_copy_language(act_lang, serv_lang);
      prepare_language_set_defaults(act_lang);
      work_lang = prepare_alloc_language();
      work_lang->id = lang_id;
      lang = work_lang;
    }

    if (!act_lang) continue;

    if (lang_extra->enabled == 2) {
      // force disabled
      td_attr = " bgcolor=\"#777777\"";
    } else if (lang_extra->enabled < 0) {
      // bad
      td_attr = " bgcolor=\"#dd7777\"";
    } else if (lang_extra->enabled == 0) {
      // disabled
      td_attr = " bgcolor=\"#dddddd\"";
    } else {
      if (enable_container > 0) {
        td_attr = " bgcolor=\"#ddffdd\"";
      } else {
        if (lang && lang->insecure > 0 && global && global->secure_run > 0) {
          td_attr = " bgcolor=\"#ffffdd\"";
        } else if (lang) {
          td_attr = " bgcolor=\"#ddffdd\"";
        }
      }
    }

    expanded = lang_extra->expanded;
    enabled = lang_extra->enabled == 1;
    more_expanded = lang_extra->more_expanded;
    if (lang && expanded) {
      jl = json_serialize_language(lang, 0);
      jstr = cJSON_PrintUnformatted(jl);
%>
<script type="text/javascript">
$(function() {
    language_states[<s:v value="lang_id" />] = {
        config: <s:v value="jstr" escape="false" />,
        enabled: <s:v value="enabled" type="jsbool" />,
        expanded: <s:v value="expanded" type="jsbool" />,
        more_expanded: <s:v value="more_expanded" type="jsbool" />,
        extra_ejudge_flags: "<s:v value="lang_extra->ejudge_flags" json="true" checkExpr="" />",
        extra_ejudge_libs: "<s:v value="lang_extra->ejudge_libs" json="true" checkExpr="" />",
        extra_compiler_env: "<s:v value="lang_extra->compiler_env" json="true" checkExpr="" />"
    };
});
</script>
<%
      free(jstr); jstr = NULL;
      cJSON_Delete(jl); jl = NULL;
    }
%>
    <s:tr>
        <td colspan="4"<s:v value="td_attr" escape="false" />><b><s:v value="act_lang->short_name" /><%
    if (act_lang->long_name && act_lang->long_name[0]) {
%> &mdash; <s:v value="act_lang->long_name" /><%
    } else {
%><%
    }
%></b><span style="float: right;"><%
%><span id="icon-disk-<s:v value="lang_id" />" class="ui-icon ui-icon-disk" onclick="newLangSave(<s:v value="lang_id" />)" style="display: none;"></span><%
    if (expanded) {
%><span id="icon-zoomin-<s:v value="lang_id" />" class="ui-icon ui-icon-zoomin" onclick="newLanguageZoomIn(<s:v value="lang_id" />)"<% if (more_expanded) { %> style="display: none;"<% }%> ></span><%
%><span id="icon-zoomout-<s:v value="lang_id" />" class="ui-icon ui-icon-zoomout" onclick="newLanguageZoomOut(<s:v value="lang_id" />)"<% if (!more_expanded) { %> style="display: none;"<% }%> ></span><%
    }
%><%
    if (enabled) {
%><span class="ui-icon ui-icon-toggle-on" onclick="newLanguageOper1(<s:v value="lang_id" />, 'disable')"></span><%
    } else {
%><span class="ui-icon ui-icon-toggle-off" onclick="newLanguageOper1(<s:v value="lang_id" />, 'enable')"></span><%
    }
%><%
    if (expanded) {
%><span id="icon-circle-triangle-n-<s:v value="lang_id" />" class="ui-icon ui-icon-circle-triangle-n" onclick="newLanguageShrink(<s:v value="lang_id" />)"></span><%
%><span id="icon-circle-triangle-s-<s:v value="lang_id" />" class="ui-icon ui-icon-circle-triangle-s" onclick="newLanguageExpand(<s:v value="lang_id" />)" style="display: none;"></span><%
    } else {
%><span class="ui-icon ui-icon-circle-triangle-s" onclick="newLanguageOper1(<s:v value="lang_id" />, 'expand')"></span><%
    }
%></span></td>
    </s:tr>
<%
    if (expanded) {
%>

    <s:tr id="lang_id-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td>Language ID:</td>
        <td><s:textfield id="lang_id" idSuffix="idsuffix" readonly="readonly" name="param" value="act_lang->id" size="48" maxlength="1024" /></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:id" /></td>
    </s:tr>

<%
      if (act_lang->compile_id > 0 && act_lang->compile_id != act_lang->id) {
%>

    <s:tr id="compile_id-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td>Compilation server ID:</td>
        <td><s:textfield id="compile_id" idSuffix="idsuffix" readonly="readonly" name="param" value="act_lang->compile_id" size="48" maxlength="1024" /></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:compile_id" /></td>
    </s:tr>

<%
      }
%>

    <s:tr id="short_name-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td>Language short name:</td>
        <td><s:textfield id="short_name" idSuffix="idsuffix" readonly="readonly" name="param" value="act_lang->short_name" size="48" maxlength="1024" /></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:short_name" /></td>
    </s:tr>

    <s:tr id="src_sfx-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td>Source file suffix:</td>
        <td><s:textfield id="src_sfx" idSuffix="idsuffix" readonly="readonly" name="param" value="act_lang->src_sfx" size="48" maxlength="1024" /></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:src_sfx" /></td>
    </s:tr>

    <s:tr id="exe_sfx-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td>Executable file suffix:</td>
        <td><s:textfield id="exe_sfx" idSuffix="idsuffix" readonly="readonly" name="param" value="act_lang->exe_sfx" size="48" maxlength="1024" /></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:exe_sfx" /></td>
    </s:tr>

<%
      if (phr->ss->cscs && phr->ss->cscs->u > 0) {
        const unsigned char *default_server_id = phr->ss->cscs->v[0].id;
        const unsigned char *cur_server_id = act_lang->compile_server_id;
        const unsigned char *empty = "";
        if (!cur_server_id || !*cur_server_id) cur_server_id = "";
%>
    <s:tr id="compile_server_id-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Compile queue:</td>
        <td><div><s:select name="compile_server_id" id="compile_server_id" idSuffix="idsuffix" onchange="newLangOnChange(this)" disabledExpr="!enabled"><%
%><s:option value="empty" selectedExpr="!strcmp(empty, cur_server_id)">Default</s:option><%
        int serv_i;
        for (serv_i = 0; serv_i < phr->ss->cscs->u; ++serv_i) {
          struct compile_server_config *csc = &phr->ss->cscs->v[serv_i];
          if (!csc->errors) {
%><s:option value="csc->id" selectedExpr="!strcmp(csc->id, cur_server_id)"><s:v value="csc->id" /></s:option><%
          }
        }
%></s:select></div>
        <div style="font-size: 0.75em; color: gray;" ><code><s:v value="default_server_id" checkExpr="" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:compile_server_id" /></td>
    </s:tr>
<%
      }
%>

    <s:tr id="super_run_dir-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Run queue:</td>
        <td><div><s:textfield id="super_run_dir" idSuffix="idsuffix" name="param" value="lang->super_run_dir" size="48" maxlength="1024" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled"/></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->super_run_dir" checkExpr="" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:super_run_dir" /></td>
    </s:tr>

    <s:tr id="long_name-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Language long name:</td>
        <td><div><s:textfield id="long_name" idSuffix="idsuffix" name="param" value="lang->long_name" size="48" maxlength="1024" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled"/></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->long_name" checkExpr="" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:long_name" /></td>
    </s:tr>

    <s:tr id="version-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Language version:</td>
        <td><div><s:textfield id="version" idSuffix="idsuffix" name="param" value="lang->version" size="48" maxlength="1024" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->version" checkExpr="" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:version" /></td>
    </s:tr>

    <s:tr id="compile_real_time_limit-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Compilation real-time limit (s):</td>
        <td><div><s:textfield id="compile_real_time_limit" idSuffix="idsuffix" name="param" value="lang->compile_real_time_limit" size="48" maxlength="1024" checkExpr="&gt; 0" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->compile_real_time_limit" checkExpr="&gt; 0" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:compile_real_time_limit" /></td>
    </s:tr>

    <s:tr id="priority_adjustment-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Run priority adjustment:</td>
        <td><div><s:textfield id="priority_adjustment" idSuffix="idsuffix" name="param" value="lang->priority_adjustment" size="48" maxlength="1024" checkExpr="!= 0" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->priority_adjustment" checkExpr="!= 0" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:priority_adjustment" /></td>
    </s:tr>

    <s:tr id="style_checker_cmd-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Style checker command:</td>
        <td><div><s:textfield id="style_checker_cmd" idSuffix="idsuffix" name="param" value="lang->style_checker_cmd" size="48" maxlength="1024" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->style_checker_cmd" checkExpr="" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:style_checker_cmd" /></td>
    </s:tr>

<%
      text_f = open_memstream(&text_s, &text_z);
      if (lang->style_checker_env) {
        for (i = 0; lang->style_checker_env[i]; ++i) {
          fprintf(text_f, "%s\n", lang->style_checker_env[i]);
        }
      }
      fclose(text_f); text_f = NULL;
%>

    <s:tr id="style_checker_env-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Style checker environment:</td>
        <td><div><s:textarea id="style_checker_env" idSuffix="idsuffix" name="param" value="text_s" cols="55" rows="2" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:style_checker_env" /></td>
    </s:tr>

<%
      free(text_s); text_s = NULL; text_z = 0;
%>

    <s:tr id="disable_auto_testing-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Do not test submits automatically:</td>
        <td><div><s:yesno3 id="disable_auto_testing" idSuffix="idsuffix" name="param" value="lang->disable_auto_testing" default="act_lang->disable_auto_testing" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><s:yesno name="param" readonly="readonly" value="act_lang->disable_auto_testing" /></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:disable_auto_testing" /></td>
    </s:tr>

    <s:tr id="disable_testing-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Disable any testing:</td>
        <td><div><s:yesno3 id="disable_testing" idSuffix="idsuffix" name="param" value="lang->disable_testing" default="act_lang->disable_testing" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><s:yesno name="param" readonly="readonly" value="act_lang->disable_testing" /></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:disable_testing" /></td>
    </s:tr>

    <s:tr id="enable_ejudge_env-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Enable run-time ejudge-specific env vars:</td>
        <td><div><s:yesno3 id="enable_ejudge_env" idSuffix="idsuffix" name="param" value="lang->enable_ejudge_env" default="act_lang->enable_ejudge_env" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><s:yesno name="param" readonly="readonly" value="act_lang->enable_ejudge_env" /></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:enable_ejudge_env" /></td>
    </s:tr>

    <s:tr id="run_env_file-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Run-time environment file:</td>
        <td><div><s:textfield id="run_env_file" idSuffix="idsuffix" name="param" value="lang->run_env_file" size="48" maxlength="1024" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->run_env_file" checkExpr="" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:run_env_file" /></td>
    </s:tr>

    <s:tr id="run_max_stack_size-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Run-time max stack size:</td>
        <td><div><s:textfield id="run_max_stack_size" idSuffix="idsuffix" name="param" value="lang->run_max_stack_size" size="48" format="V" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->run_max_stack_size" checkExpr="&gt; 0" format="V" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:run_max_stack_size" /></td>
    </s:tr>

    <s:tr id="run_max_rss_size-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Run-time max resident set size:</td>
        <td><div><s:textfield id="run_max_rss_size" idSuffix="idsuffix" name="param" value="lang->run_max_rss_size" size="48" format="V" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->run_max_rss_size" checkExpr="&gt; 0" format="V" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:run_max_rss_size" /></td>
    </s:tr>

    <s:tr id="extra_ejudge_flags-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Compilation flags:</td>
        <td><s:textarea id="extra_ejudge_flags" idSuffix="idsuffix" name="param" value="lang_extra->ejudge_flags" cols="55" rows="2" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></td>
        <td></td>
    </s:tr>

    <s:tr id="extra_ejudge_libs-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Compilation libraries:</td>
        <td><s:textarea id="extra_ejudge_libs" idSuffix="idsuffix" name="param" value="lang_extra->ejudge_libs" cols="55" rows="2" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></td>
        <td></td>
    </s:tr>

    <s:tr id="extra_compiler_env-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Compiler environment:</td>
        <td><s:textarea id="extra_compiler_env" idSuffix="idsuffix" name="param" value="text_s" cols="55" rows="2" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></td>
        <td></td>
    </s:tr>

    <s:tr id="container_options-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Run-time container options:</td>
        <td><div><s:textfield id="container_options" idSuffix="idsuffix" name="param" value="lang->container_options" size="48" maxlength="1024" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->container_options" checkExpr="" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:container_options" /></td>
    </s:tr>

    <s:tr id="compiler_container_options-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Compile-time container options:</td>
        <td><div><s:textfield id="compiler_container_options" idSuffix="idsuffix" name="param" value="lang->compiler_container_options" size="48" maxlength="1024" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->compiler_container_options" checkExpr="" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:compiler_container_options" /></td>
    </s:tr>

    <s:tr id="clean_up_cmd-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Clean-up command:</td>
        <td><div><s:textfield id="clean_up_cmd" idSuffix="idsuffix" name="param" value="lang->clean_up_cmd" size="48" maxlength="1024" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->clean_up_cmd" checkExpr="" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:clean_up_cmd" /></td>
    </s:tr>

    <s:tr id="clean_up_env_file-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Clean-up environment file:</td>
        <td><div><s:textfield id="clean_up_env_file" idSuffix="idsuffix" name="param" value="lang->clean_up_env_file" size="48" maxlength="1024" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->clean_up_env_file" checkExpr="" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:clean_up_env_file" /></td>
    </s:tr>

    <s:tr id="multi_header_suffix-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]">
        <td width="50">&nbsp;</td>
        <td valign="top">Multi-header name suffix:</td>
        <td><div><s:textfield id="multi_header_suffix" idSuffix="idsuffix" name="param" value="lang->multi_header_suffix" size="48" maxlength="1024" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->multi_header_suffix" checkExpr="" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:multi_header_suffix" /></td>
    </s:tr>

    <s:tr id="arch-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Language architecture (obsolete):</td>
        <td><div><s:textfield id="arch" idSuffix="idsuffix" name="param" value="lang->arch" size="48" maxlength="1024" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->arch" checkExpr="" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:arch" /></td>
    </s:tr>

    <s:tr id="binary-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Accept binary files:</td>
        <td><div><s:yesno3 id="binary" idSuffix="idsuffix" name="param" value="lang->binary" default="act_lang->binary" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><s:yesno name="param" readonly="readonly" value="act_lang->binary" /></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:binary" /></td>
    </s:tr>

    <s:tr id="content_type-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Content type for download:</td>
        <td><div><s:textfield id="content_type" idSuffix="idsuffix" name="param" value="lang->content_type" size="48" maxlength="1024" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->content_type" checkExpr="" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:content_type" /></td>
    </s:tr>

    <s:tr id="disable_security-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Disable security restrictions (obsolete):</td>
        <td><div><s:yesno3 id="disable_security" idSuffix="idsuffix" name="param" value="lang->disable_security" default="act_lang->disable_security" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><s:yesno name="param" readonly="readonly" value="act_lang->disable_security" /></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:disable_security" /></td>
    </s:tr>

    <s:tr id="enable_custom-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Use custom compilation script:</td>
        <td><div><s:yesno3 id="enable_custom" idSuffix="idsuffix" name="param" value="lang->enable_custom" default="act_lang->enable_custom" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><s:yesno name="param" readonly="readonly" value="act_lang->enable_custom" /></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:enable_custom" /></td>
    </s:tr>

    <s:tr id="enable_suid_run-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Enable separate user at run time (obsolete):</td>
        <td><div><s:yesno3 id="enable_suid_run" idSuffix="idsuffix" name="param" value="lang->enable_suid_run" default="act_lang->enable_suid_run" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><s:yesno name="param" readonly="readonly" value="act_lang->enable_suid_run" /></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:enable_suid_run" /></td>
    </s:tr>

    <s:tr id="insecure-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Language is insecure at run-time (obsolete):</td>
        <td><div><s:yesno3 id="insecure" idSuffix="idsuffix" name="param" value="lang->insecure" default="act_lang->insecure" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><s:yesno name="param" readonly="readonly" value="act_lang->insecure" /></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:insecure" /></td>
    </s:tr>

    <s:tr id="is_dos-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Perform line ending conversion for input/output:</td>
        <td><div><s:yesno3 id="is_dos" idSuffix="idsuffix" name="param" value="lang->is_dos" default="act_lang->is_dos" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><s:yesno name="param" readonly="readonly" value="act_lang->is_dos" /></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:is_dos" /></td>
    </s:tr>

    <s:tr id="key-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Language key (obsolete):</td>
        <td><div><s:textfield id="key" idSuffix="idsuffix" name="param" value="lang->key" size="48" maxlength="1024" checkExpr="" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->key" checkExpr="" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:key" /></td>
    </s:tr>

    <s:tr id="max_file_size-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Compile max file size:</td>
        <td><div><s:textfield id="max_file_size" idSuffix="idsuffix" name="param" value="lang->max_file_size" size="48" format="V" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->max_file_size" checkExpr="&gt; 0" format="V" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:max_file_size" /></td>
    </s:tr>

    <s:tr id="max_stack_size-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Compile max stack size (obsolete):</td>
        <td><div><s:textfield id="max_stack_size" idSuffix="idsuffix" name="param" value="lang->max_stack_size" size="48" format="V" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->max_stack_size" checkExpr="&gt; 0" format="V" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:max_stack_size" /></td>
    </s:tr>

    <s:tr id="max_vm_size-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Compile max VM size (obsolete):</td>
        <td><div><s:textfield id="max_vm_size" idSuffix="idsuffix" name="param" value="lang->max_vm_size" size="48" format="V" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->max_vm_size" checkExpr="&gt; 0" format="V" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:max_vm_size" /></td>
    </s:tr>

    <s:tr id="max_rss_size-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Compile max RSS size (obsolete):</td>
        <td><div><s:textfield id="max_rss_size" idSuffix="idsuffix" name="param" value="lang->max_rss_size" size="48" format="V" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->max_rss_size" checkExpr="&gt; 0" format="V" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:max_rss_size" /></td>
    </s:tr>

    <s:tr id="preserve_line_numbers-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Track source line numbers at run time (obsolete):</td>
        <td><div><s:yesno3 id="preserve_line_numbers" idSuffix="idsuffix" name="param" value="lang->preserve_line_numbers" default="act_lang->preserve_line_numbers" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><s:yesno name="param" readonly="readonly" value="act_lang->preserve_line_numbers" /></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:preserve_line_numbers" /></td>
    </s:tr>

    <s:tr id="run_max_vm_size-div" idSuffix="idsuffix" attr="form_row_attrs[row ^= 1]" hiddenExpr="!more_expanded">
        <td width="50">&nbsp;</td>
        <td valign="top">Run-time max VM size (obsolete):</td>
        <td><div><s:textfield id="run_max_vm_size" idSuffix="idsuffix" name="param" value="lang->run_max_vm_size" size="48" format="V" onchange="newLangOnChange(this)" disabledExpr="!enabled" /></div>
            <div style="font-size: 0.75em; color: gray;" ><code><s:v value="act_lang->run_max_vm_size" checkExpr="&gt; 0" format="V" /></code></div></td>
        <td><s:help icon="yes" topic="Serve.cfg:language:run_max_vm_size" /></td>
    </s:tr>

    <s:tr id="button-row-div" idSuffix="idsuffix" hiddenExpr="1" >
        <td colspan="4" style="text-align: center;">
            <span style="margin:0px auto;">
                <button type="button" id="button-save-<s:v value="lang_id" />" onclick="newLangSave(<s:v value="lang_id" />)">Save <span class="ui-icon ui-icon-save"></span></button>
                <button type="button" id="button-cancel-<s:v value="lang_id" />" onclick="newLangCancel(<s:v value="lang_id" />)">Cancel <span class="ui-icon ui-icon-cancel"></span></button>
            </span>
        </td>
    </s:tr>

<%
    }
    if (act_lang) {
      prepare_free_config(&act_lang->g);
    }
    if (work_lang) {
      prepare_free_config(&work_lang->g);
    }
  }
%>

<%
skip_all_new_language_rows:;
%>

</table>

<script type="text/javascript">
var SID='<s:v value="phr->session_id" />';
var self_url='<s:v value="phr->self_url" escape="false" />';
var script_name='<s:v value="phr->script_name" escape="false" />';<%
    int lang_ajax_action = SSERV_CMD_LANG_AJAX_ACTION;
%>
var lang_ajax_action='<s:v value="lang_ajax_action" />';

function newLanguageOper1(lang_id, oper)
{
    $.ajax({
        url : self_url,
        type: "POST",
        data: {
            SID: SID,
            action: lang_ajax_action,
            lang_id: lang_id,
            oper: oper
        },
        contentType: "application/x-www-form-urlencoded; charset=utf-8",
        dataType: "json",
        success:function(data, textStatus, jqXHR) {
            if (data.ok) {
                document.location.reload(true);
            }
        },
        error: function(jqXHR, textStatus, errorThrown) {
        }
    });
}

const main_div_ids = // 27
[
    "lang_id", "compile_id", "short_name", "src_sfx", "exe_sfx",
    "compile_server_id", "super_run_dir", "long_name", "version", "compile_real_time_limit",
    "priority_adjustment", "style_checker_cmd", "style_checker_env", "disable_auto_testing", "disable_testing",
    "enable_ejudge_env", "run_env_file", "run_max_stack_size", "run_max_rss_size", "extra_ejudge_flags",
    "extra_ejudge_libs", "extra_compiler_env", "container_options", "compiler_container_options", "clean_up_cmd",
    "clean_up_env_file", "multi_header_suffix"
];

const verbose_div_ids = // 14
[
    "arch", "binary", "content_type", "disable_security", "enable_custom",
    "enable_suid_run", "insecure", "is_dos", "key", "max_file_size",
    "max_stack_size", "max_vm_size", "max_rss_size", "preserve_line_numbers", "run_max_vm_size"
];

function newLanguageZoomIn(lang_id)
{
    $("#icon-zoomin-" + lang_id).hide();
    $("#icon-zoomout-" + lang_id).show();
    for (const d of verbose_div_ids) {
        $("#" + d + "-div-" + lang_id).show();
    }
    language_states[lang_id]["more_expanded"] = true;
}

function newLanguageZoomOut(lang_id)
{
    $("#icon-zoomin-" + lang_id).show();
    $("#icon-zoomout-" + lang_id).hide();
    for (const d of verbose_div_ids) {
        $("#" + d + "-div-" + lang_id).hide();
    }
    language_states[lang_id]["more_expanded"] = false;
}

function newLanguageShrink(lang_id)
{
    $("#icon-zoomin-" + lang_id).hide();
    $("#icon-zoomout-" + lang_id).hide();
    $("#icon-circle-triangle-n-" + lang_id).hide();
    $("#icon-circle-triangle-s-" + lang_id).show();
    language_states[lang_id]["expanded"] = false;
    for (const d of main_div_ids) {
        $("#" + d + "-div-" + lang_id).hide();
    }
    for (const d of verbose_div_ids) {
        $("#" + d + "-div-" + lang_id).hide();
    }
    //console.log(collectLanguageForm(lang_id));
}

function newLanguageExpand(lang_id)
{
    if (!language_states.hasOwnProperty(lang_id)) {
        newLanguageOper1(lang_id, 'expand');
        return;
    }
    $("#icon-circle-triangle-n-" + lang_id).show();
    $("#icon-circle-triangle-s-" + lang_id).hide();
    language_states[lang_id]["expanded"] = true;
    for (const d of main_div_ids) {
        $("#" + d + "-div-" + lang_id).show();
    }
    if (language_states[lang_id]["more_expanded"]) {
        newLanguageZoomIn(lang_id);
    } else {
        newLanguageZoomOut(lang_id);
    }
}

const lang_boolean_inputs = // 10
[
    "disable_auto_testing", "disable_testing", "enable_ejudge_env", "binary", "disable_security",
    "enable_custom", "enable_suid_run", "insecure", "is_dos", "preserve_line_numbers"
];

const lang_size_inputs = // 7
[
    "run_max_stack_size", "run_max_rss_size", "max_file_size", "max_stack_size", "max_vm_size",
    "run_max_vm_size", "max_rss_size"
];

const lang_int_inputs = // 2
[
    "compile_real_time_limit", "priority_adjustment"
];

const lang_string_inputs = // 18
[
    "compile_server_id", "super_run_dir", "long_name", "version", "style_checker_cmd",
    "style_checker_env", "run_env_file", "extra_ejudge_flags", "extra_ejudge_libs", "extra_compiler_env",
    "container_options", "compiler_container_options", "clean_up_cmd", "clean_up_env_file", "multi_header_suffix",
    "arch", "content_type", "key"
];

function parseSizeString(str)
{
    if (str === undefined) {
        return NaN;
    }
    const ss = str.trim();
    if (ss === "") {
        return NaN;
    }
    const sss = ss.match(/([^GgKkMm]+)([GgKkMm]$)?/);
    if (sss === undefined || sss === null || sss.length != 3) {
        return NaN;
    }
    if (sss[2] === undefined) {
        if (sss[1].length != ss.length) {
            return NaN;
        }
        return parseInt(sss[1]);
    }
    let v = parseInt(sss[1]);
    if (sss[2] === "k" || sss[2] === "K") {
        v *= 1024;
    } else if (sss[2] === "m" || sss[2] === "M") {
        v *= 1024 * 1024;
    } else if (sss[2] === "g" || sss[2] === "G") {
        v *= 1024 * 1024 * 1024;
    }
    return v;
}

function unparseSize(size)
{
    if (size === undefined || size <= 0) return "";
    if (size % (1024*1024*1024) == 0) {
        return "" + (size / (1024*1024*1024)) + "G";
    }
    if (size % (1024*1024) == 0) {
        return "" + (size / (1024*1024)) + "M";
    }
    if (size % (1024) == 0) {
        return "" + (size / (1024)) + "K";
    }
    return "" + size;
}

function collectLanguageForm(lang_id)
{
    let r = {};
    for (const i of lang_string_inputs) {
        const s = $("#" + i + "-" + lang_id).val();
        if (s !== undefined) {
            r[i] = s.trim();
        }
    }
    for (const i of lang_int_inputs) {
        const s = $("#" + i + "-" + lang_id).val();
        if (s !== undefined) {
            const ss = s.trim();
            if (ss === "") {
                r[i] = 0;
            } else {
                const v = parseInt(ss);
                if (isNaN(v)) {
                    r[i] = 0;
                } else {
                    r[i] = v;
                }
            }
        }
    }
    for (const i of lang_boolean_inputs) {
        const s = $("#" + i + "-" + lang_id).val();
        if (s !== undefined) {
            const ss = s.trim();
            if (ss === "") {
                r[i] = 0;
            } else {
                const v = parseInt(ss);
                if (isNaN(v)) {
                    r[i] = 0;
                } else {
                    r[i] = v;
                }
            }
        }
    }
    for (const i of lang_size_inputs) {
        const s = $("#" + i + "-" + lang_id).val();
        const v = parseSizeString(s);
        if (v !== undefined && !isNaN(v)) {
            r[i] = v;
        }
    }
    return r;
}

function isEqualStrings(s1, s2)
{
    if ((s1 === undefined || s1 === null || s1 === "") && (s2 === undefined || s2 === null || s2 === "")) {
        return true;
    }
    if ((s1 === undefined || s1 === null || s1 === "") || (s2 === undefined || s2 === null || s2 === "")) {
        return false;
    }
    return s1.trim() === s2.trim();
}

function isEqualNumber(n1, n2)
{
    if ((n1 === undefined || n1 === null || n1 === 0) && (n2 === undefined || n2 === null || n2 === 0)) {
        return true;
    }
    if ((n1 === undefined || n1 === null || n1 === 0) || (n2 === undefined || n2 === null || n2 === 0)) {
        return false;
    }
    return n1 === n2;
}

function isEqualBoolean(st, dt)
{
    if ((st === undefined || st === null || st < 0) && (dt === undefined || dt === null || dt < 0)) {
        return true;
    }
    if ((st === undefined || st === null || st < 0) || (dt === undefined || dt === null || dt < 0)) {
        return false;
    }
    return !!s1 === !!dt;
}

function isChanged(lang_id, data)
{
    if (!language_states.hasOwnProperty(lang_id)) {
        return false;
    }
    const st = language_states[lang_id];

    for (const i of lang_string_inputs) {
        if (i === "extra_ejudge_flags" || i === "extra_ejudge_libs" || i === "extra_compiler_env") {
            if (!isEqualStrings(st[i], data[i])) {
                console.log("differs: ", i, ": ", st[i], ":", data[i]);
                return true;
            }
        } else {
            if (!isEqualStrings(st.config[i], data[i])) {
                console.log("differs: ", i, ": ", st.config[i], ":", data[i]);
                return true;
            }
        }
    }
    for (const i of lang_int_inputs) {
        if (!isEqualNumber(st.config[i], data[i])) {
            console.log("differs: ", i, ": ", st.config[i], ":", data[i]);
            return true;
        }
    }
    for (const i of lang_boolean_inputs) {
        if (!isEqualBoolean(st.config[i], data[i])) {
            console.log("differs: ", i, ": ", st.config[i], ":", data[i]);
            return true;
        }
    }
    for (const i of lang_size_inputs) {
        if (!isEqualNumber(st.config[i], data[i])) {
            console.log("differs: ", i, ": ", st.config[i], ":", data[i]);
            return true;
        }
    }
    return false;
}

function newLangOnChange(ev)
{
    const lang_id = ~~ev.id.substring(ev.id.lastIndexOf("-")+1);
    const data = collectLanguageForm(lang_id);
    if (isChanged(lang_id, data)) {
        $("#icon-disk-" + lang_id).show();
        $("#button-row-div-" + lang_id).show();
    } else {
        $("#icon-disk-" + lang_id).hide();
        $("#button-row-div-" + lang_id).hide();
    }
}

function newLangCancel(lang_id)
{
    if (!language_states.hasOwnProperty(lang_id)) {
        return false;
    }
    const st = language_states[lang_id];
    for (const i of lang_string_inputs) {
        const id = "#" + i + "-" + lang_id;
        if (i === "extra_ejudge_flags" || i === "extra_ejudge_libs" || i === "extra_compiler_env") {
            if (st.hasOwnProperty(i)) {
                $(id).val(st[i]);
            } else {
                $(id).val("");
            }
        } else {
            if (st.config.hasOwnProperty(i)) {
                $(id).val(st.config[i]);
            } else {
                $(id).val("");
            }
        }
    }
    for (const i of lang_int_inputs) {
        const id = "#" + i + "-" + lang_id;
        if (st.config.hasOwnProperty(i)) {
            $(id).val(st.config[i]);
        } else {
            $(id).val("");
        }
    }
    for (const i of lang_boolean_inputs) {
        const id = "#" + i + "-" + lang_id;
        if (st.config.hasOwnProperty(i)) {
            if (st.config[i]) {
                $(id).val(1);
            } else {
                $(id).val(0);
            }
        } else {
            $(id).val(-1);
        }
    }
    for (const i of lang_size_inputs) {
        const id = "#" + i + "-" + lang_id;
        if (st.config.hasOwnProperty(i)) {
            if (st.config[i] > 0) {
                $(id).val(unparseSize(st.config[i]));
            } else {
                $(id).val("");
            }
        } else {
            $(id).val("");
        }
    }
    $("#icon-disk-" + lang_id).hide();
    $("#button-row-div-" + lang_id).hide();
}

function newLangSave(lang_id)
{
    data = collectLanguageForm(lang_id);
    data["SID"] = SID;
    data["action"] = lang_ajax_action;
    data["lang_id"] = lang_id;
    data["oper"] = "save";
    $.ajax({
        url : self_url,
        type: "POST",
        data: data,
        contentType: "application/x-www-form-urlencoded; charset=utf-8",
        dataType: "json",
        success:function(data, textStatus, jqXHR) {
            if (data.ok) {
                document.location.reload(true);
            }
        },
        error: function(jqXHR, textStatus, errorThrown) {
        }
    });
}

const global_size_inputs =
[
    "global_compile_max_vm_size", "global_compile_max_rss_size", "global_compile_max_stack_size", "global_compile_max_file_size", 
];

function collectGlobalForm()
{
    let r = {};
    for (const i of global_size_inputs) {
        const s = $("#" + i).val();
        const v = parseSizeString(s);
        if (v !== undefined && !isNaN(v)) {
            r[i] = v;
        }
    }
    const compile_server_id = $("#global_compile_server_id").val();
    if (compile_server_id) {
        r["global_compile_server_id"] = compile_server_id;
    }
    return r;
}

function isChangedGlobalForm(orig, data)
{
    for (const i of global_size_inputs) {
        if (!isEqualNumber(orig[i], data[i])) {
            console.log("differs: ", i, ": ", orig[i], ":", data[i]);
            return true;
        }
    }
    if (!isEqualStrings(orig["global_compile_server_id"], data["global_compile_server_id"])) {
        return true;
    }
    return false;
}

function newLangGlobalOnChange(obj)
{
    r = collectGlobalForm();
    if (isChangedGlobalForm(global_language_params, r)) {
        $("#global-button-row-div").show();
    } else {
        $("#global-button-row-div").hide();
    }
}

function newLangGlobalSave()
{
    data = collectGlobalForm();
    data["SID"] = SID;
    data["action"] = lang_ajax_action;
    data["lang_id"] = 0;
    data["oper"] = "save_global";
    $.ajax({
        url : self_url,
        type: "POST",
        data: data,
        contentType: "application/x-www-form-urlencoded; charset=utf-8",
        dataType: "json",
        success:function(data, textStatus, jqXHR) {
            if (data.ok) {
                document.location.reload(true);
            }
        },
        error: function(jqXHR, textStatus, errorThrown) {
        }
    });
}

function newLangGlobalCancel()
{
    for (const i of global_size_inputs) {
        $("#" + i).val(unparseSize(global_language_params[i]));
    }
    newLangGlobalOnChange();
}

</script>

<%@include "cnts_edit_cur_bottom_menu.csp"
%><%
/* ================== new language page end ================== */
%><%
cleanup:
  if (text_f) fclose(text_f);
  free(text_s);
  l10n_resetlocale();
  html_armor_free(&ab);
%>
