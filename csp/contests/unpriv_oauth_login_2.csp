<%
%><%@include "unpriv_includes.csp"
%><%
#include "ejudge/ejudge_cfg.h"
#include "ejudge/oauth.h"
#include "ejudge/userlist_clnt.h"
#include "ejudge/userlist_proto.h"
%><%@set ac_prefix = "NEW_SRV_ACTION_"
%><%@set err_prefix = "NEW_SRV_ERR_"
%><%@set getter_name = "csp_get_unpriv_oauth_login_2"
%><%@page csp_view_unpriv_oauth_login_2(PageInterface *ps, FILE *log_f, FILE *out_f, struct http_request_info *phr)
%><%@include "unpriv_stdvars.csp"
%><%
  const unsigned char *state = NULL;
  const unsigned char *code = NULL;
  unsigned char *job_id = NULL;
  const unsigned char *provider = NULL;
  unsigned long long provider_id = 0;
  const unsigned char *access_token = NULL;

%><s:read var="state" ignoreerrors="yes" /><%
%><s:read var="code" ignoreerrors="yes" /><%

  if (phr->session_id == 3) {
    // yandex is shit
    if (!state || !*state) {
%>
<html>
<body>
<script>
var hash_part = document.location.hash.slice(1);
var url_part = document.location.href.replace(document.location.hash, '');
var new_url = url_part + "?" + hash_part;
document.location.href = new_url;
</script>
</body>
</html>
<%
      goto cleanup;
    }
%><s:read var="access_token" ignoreerrors="access_token" /><%
    code = access_token; access_token = NULL;
  }

  if (!state || !*state) {
    FAIL(NEW_SRV_ERR_INV_PARAM);
  }
  if (!code || !*code) {
    FAIL(NEW_SRV_ERR_INV_PARAM);
  }
  provider_id = phr->session_id;

  job_id = oauth_server_callback_num(phr->config, provider_id, state, code);
  if (!job_id) {
    FAIL(NEW_SRV_ERR_SERVICE_NOT_AVAILABLE);
  }
  provider = oauth_get_provider(phr->config, provider_id);

  phr->session_id = 0;

%><s:url name="Login3Url" ac="oauth-login-3" ><s:param name="job_id" value="job_id" /><s:param name="provider" value="provider" /></s:url><s:redirect url="Login3Url" /><%
cleanup:;
  html_armor_free(&ab);
  free(job_id);
%>
