<%
%><%@include "priv_includes.csp"
%><%
#include "ejudge/ej_uuid.h"
#include "ejudge/content_plugin.h"

#include <ctype.h>
%><%@set ac_prefix = "NEW_SRV_ACTION_"
%><%@set err_prefix = "NEW_SRV_ERR_"
%><%@set getter_name = "csp_get_priv_clar_page"
%><%@page csp_view_priv_clar_page(PageInterface *ps, FILE *log_f, FILE *out_f, struct http_request_info *phr)
%><%@include "priv_stdvars.csp"
%><%
  struct clar_entry_v2 clar;
  time_t start_time;
  unsigned char *msg_txt = 0;
  size_t msg_len = 0;
  unsigned char b1[1024];
  const unsigned char *clar_subj = 0;
  int clar_id;
  int enable_main_menu = 0;
  unsigned char *prob_name = NULL;
  const struct section_problem_data *prob = NULL;
  int user_id = 0;
  const struct userlist_user *u = NULL;
  const struct userlist_user_info *ui = NULL;
  unsigned char avatar_url[1024];

  avatar_url[0] = 0;

%><s:read var="clar_id" required="yes" errors="inv-clar-id" /><%

  if (clar_id < 0 || clar_id >= clar_get_total(cs->clarlog_state)
      || clar_get_record(cs->clarlog_state, clar_id, &clar) < 0
      || clar.id < 0) {
    FAIL(NEW_SRV_ERR_INV_CLAR_ID);
  }

  if (clar.from > 0) {
    user_id = clar.from;
  } else if (clar.to > 0) {
    user_id = clar.to;
  }

  if (opcaps_check(phr->caps, OPCAP_VIEW_CLAR) < 0) {
    FAIL(NEW_SRV_ERR_PERMISSION_DENIED);
  }

  info("audit:%s:%d:%d:%d", phr->action_str, phr->user_id, phr->contest_id, clar_id);

  start_time = run_get_start_time(cs->runlog_state);
  clar_subj = clar_get_subject(cs->clarlog_state, clar_id);

  // try to extract problem name and lookup it
  const unsigned char *p = strchr(clar_subj, ':');
  if (p) {
    prob_name = malloc((p - clar_subj) + 1);
    const unsigned char *q = clar_subj;
    while (*q != ':' && isspace(*q)) ++q;
    if (*q == ':') {
      xfree(prob_name);
      prob_name = NULL;
    } else {
      unsigned char *s = prob_name;
      while (*q != ':') {
        *s++ = *q++;
      }
      while (isspace(*--s)) {}
      *++s = 0;
    }
  }
  if (prob_name) {
    for (int prob_id = 1; prob_id <= cs->max_prob; ++prob_id) {
      if (cs->probs[prob_id] && !strcmp(cs->probs[prob_id]->short_name, prob_name)) {
        prob = cs->probs[prob_id];
        break;
      }
    }
  }
  if (!prob) {
    xfree(prob_name); prob_name = NULL;
  }

  if (user_id > 0) {
    u = teamdb_get_userlist(cs->teamdb_state, user_id);
    if (u) ui = u->cnts0;
    if (ui && ui->avatar_id && ui->avatar_id[0]) {
      struct content_loaded_plugin *cp = content_plugin_get(phr->extra, phr->cnts, phr->config, NULL);
      int content_enabled = 0;
      if (cp) {
        content_enabled = cp->iface->is_enabled(cp->data, phr->cnts);
      }
      if (content_enabled) {
        cp->iface->get_url(cp->data, avatar_url, sizeof(avatar_url),
                           phr->cnts, ui->avatar_id, ui->avatar_suffix);
      } else {
        snprintf(avatar_url, sizeof(avatar_url), "%s?SID=%llx&key=%s&action=%d",
                 phr->self_url, phr->session_id, ui->avatar_id, NEW_SRV_ACTION_GET_AVATAR);
      }
    }
  }

  l10n_setlocale(phr->locale_id);

  unsigned char title[1024];
  snprintf(title, sizeof(title), "%s %d", _("Viewing clar"), clar_id);
%><%@include "priv_header.csp"
%>
</div>

<h2><s:_>Message</s:_> <s:v value="clar_id" />
<%  if (phr->role == USER_ROLE_ADMIN && opcaps_check(phr->caps, OPCAP_EDIT_RUN) >= 0) { %>
<s:url name="EditClarUrl" ac="priv-edit-clar-page">
  <s:param name="clar_id" value="clar_id" />
</s:url>
 [<s:a url="EditClarUrl"><s:_>Edit</s:_></s:a>]
<%  } %>
</h2>

<div class="ib pt-15">
<% if (avatar_url[0]) { %>
    <img class="userpic-img userpic-img-left" src="<s:v value="avatar_url" escape="no" />" alt="avatar" />
<% } %>
<table border="0" class="info-table mt-0 mw-600">
<tr><td><s:_>Clar ID</s:_>:</td><td><s:v value="clar_id" /></td></tr>
<tr><td>Clar UUID:</td><td><s:v type="uuid" value="clar.uuid" /></td></tr>
<%  if (clar.hide_flag) { %>
<tr><td><s:_>Available only after contest start</s:_>:</td><td><%
  fputs(clar.hide_flag?_("YES"):_("NO"), out_f);
%></td></tr>
<% } %>
<tr><td><s:_>Flags</s:_>:</td><td><s:v escape="false" value="clar_flags_html(cs->clarlog_state, clar.flags, clar.from, clar.to, 0, 0)" /></td></tr>
<tr><td><s:_>Time</s:_>:</td><td><s:v escape="false" value="duration_str(1, clar.time, 0, 0, 0)" /></td></tr>
<%  if (!cs->global->is_virtual && start_time > 0) { %>
<tr><td><s:_>Duration</s:_>:</td><td><s:v escape="false" value="duration_str(0, clar.time, start_time, 0, 0)" /></td></tr>
<%  } %>
<tr><td><s:_>IP address</s:_>:</td><td><s:v value="clar.a.ip" /></td></tr>
<tr><td><s:_>Size</s:_>:</td><td><s:v value="clar.size" /></td></tr>
<tr><td><s:_>Sender</s:_>:</td>
<% if (!clar.from) {
    if (!clar.j_from) { %>
<td><b><s:_>judges</s:_></b></td>
<%    } else { %>
<td><b><s:_>judges</s:_></b> (<s:v value="teamdb_get_name_2(cs->teamdb_state, clar.j_from)" />)</td>
<%    }
  } else { %>
<% snprintf(b1, sizeof(b1), "uid == %d", clar.from); %>
<s:url name="UserFilterUrl" ac="main-page">
    <s:param name="filter_expr" value="b1" />
</s:url>
<td><s:a url="UserFilterUrl"><s:v value="teamdb_get_name_2(cs->teamdb_state, clar.from)" /> (<s:v value="clar.from" />)</s:a></td>
<%  }%>
</tr>
<tr><td><s:_>To</s:_>:</td>
<%  if (!clar.to && !clar.from) { %>
<td><b><s:_>all</s:_></b></td>
<%  } else if (!clar.to) { %>
<td><b><s:_>judges</s:_></b></td>
<%  } else { %>
<% snprintf(b1, sizeof(b1), "uid == %d", clar.to); %>
<s:url name="UserFilterUrl" ac="main-page">
    <s:param name="filter_expr" value="b1" />
</s:url>
<td><s:a url="UserFilterUrl"><s:v value="teamdb_get_name_2(cs->teamdb_state, clar.to)" /> (<s:v value="clar.to" />)</s:a></td>
<%  } %>
</tr>
<%
  if (prob != NULL) {
%>
<tr>
  <td><s:_>Problem</s:_>:</td>
<%
  if (user_id > 0) {
    snprintf(b1, sizeof(b1), "uid == %d && prob == \"%s\"", user_id, prob->short_name);
  } else {
    snprintf(b1, sizeof(b1), "prob == \"%s\"", prob->short_name);
  }
%>
  <s:url name="UserFilterUrl" ac="main-page" >
    <s:param name="filter_expr" value="b1" />
  </s:url>
  <s:url name="SubmitPageUrl" ac="priv-submit-page"><s:param name="problem" value="prob->id" /></s:url>
  <td><s:a url="UserFilterUrl"><s:v value="prob->short_name" /> (<s:v value="prob->long_name" checkExpr="" />)</s:a> <s:a url="SubmitPageUrl">[<s:_>Statement</s:_>]</s:a></td>
</tr>
<%
  }
%>
<%  if (clar.in_reply_to > 0) { %>
<s:url name="ViewOtherClarUrl" ac="view-clar">
  <s:param name="clar_id" value="clar.in_reply_to - 1" />
</s:url>
<tr><td><s:_>In reply to</s:_>:</td><td><s:a url="ViewOtherClarUrl"><s:v value="clar.in_reply_to - 1" /></s:a> (<s:v type="uuid" value="clar.in_reply_uuid" />)</td></tr>
<%  } %>
<%  if (clar.run_id > 0) { %>
<s:url name="ViewSourceUrl" ac="view-source">
  <s:param name="run_id" value="clar.run_id - 1" />
</s:url>
<tr><td>Run ID:</td><td><s:a url="ViewSourceUrl"><s:v value="clar.run_id - 1" /></s:a> (<s:v type="uuid" value="clar.run_uuid" />)</td></tr>
<%  } %>
<tr><td><s:_>Locale code</s:_>:</td><td><s:v value="clar.locale_id" /></td></tr>
<tr><td><s:_>Subject</s:_>:</td><td><s:v value="clar_subj" /></td></tr>
</table>
</div>

<hr/>
<%  if (clar_get_text(cs->clarlog_state, clar_id, &msg_txt, &msg_len) < 0) { %>
<big><font color="red"><s:_>Cannot read message text!</s:_></font></big>
<%  } else { %>
<pre><s:v value="msg_txt" /></pre>
<%  } %>
<%  if (phr->role >= USER_ROLE_JUDGE && clar.from
      && opcaps_check(phr->caps, OPCAP_REPLY_MESSAGE) >= 0) { %>
<hr/>
<s:form>
<s:hidden name="in_reply_to" value="clar_id" checkExpr=">= 0" />
<p><s:submit ac="clar-reply-read-problem" />
<s:submit ac="clar-reply-no-comments" />
<s:submit ac="clar-reply-yes" />
<s:submit ac = "clar-reply-no" /></p>
<p><textarea name="reply" rows="20" cols="60"></textarea></p>
<p><s:submit ac="clar-reply" />
<s:submit ac="clar-reply-all" /></p>
</s:form>
<%  } %><%@include "priv_footer.csp"
%><%

cleanup:;
  l10n_resetlocale();
  html_armor_free(&ab);
  xfree(msg_txt);
  xfree(prob_name);
%>
