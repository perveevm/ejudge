<%
  if (!cnts->exam_mode) {
%><div class="h2-long"><h2><s:_>Server status</s:_></h2></div>
<p><b><%
    if (stop_time > 0) {
      if (duration > 0 && global->board_fog_time > 0
          && global->board_unfog_time > 0
          && cs->current_time < stop_time + global->board_unfog_time
          && !cs->standings_updated) {
        if (cnts->exam_mode) {
%><s:_>The exam is over (standings are frozen)</s:_><%
        } else {
%><s:_>The contest is over (standings are frozen)</s:_><%
        }
      } else if (cnts->exam_mode) {
%><s:_>The exam is over</s:_><%
      } else {
%><s:_>The contest is over</s:_><%
      }
    } else if (start_time > 0) {
      if (fog_start_time > 0 && cs->current_time >= fog_start_time) {
        if (cnts->exam_mode) {
%><s:_>The exam is in progress (standings are frozen)</s:_><%
        } else {
%><s:_>The contest is in progress (standings are frozen)</s:_><%
        }
      } else {
        if (cnts->exam_mode) {
%><s:_>The exam is in progress</s:_><%
        } else {
%><s:_>The contest is in progress</s:_><%
        }
      }
    } else if (!cs->upsolving_mode) {
      if (cnts->exam_mode) {
%><s:_>The exam is not started</s:_><%
      } else {
%><s:_>The contest is not started</s:_><%
      }
    }
%></b></p>

<%
    if (cs->upsolving_mode) {
      if (!cs->global->is_virtual || start_time <= 0 || stop_time > 0) {
%><p><b><s:_>Upsolving mode</s:_></b></p>
<%      }
    }
%>

<%
    if (start_time > 0) {
      if (global->score_system == SCORE_OLYMPIAD && !global->is_virtual) {
%><p><b><%
        if (cs->accepting_mode) {
%><s:_>Participants' solutions are being accepted</s:_><%
        } else if (!cs->testing_finished) {
%><s:_>Participants' solutions are being judged</s:_><%
        } else {
%><s:_>Participants' solutions are judged</s:_><%
        }
%></b></p><%
      }
    }
%>
<%
    if (cs->clients_suspended) {
%><p><b><s:_>Participants' requests are suspended</s:_></b></p><%
    }
%>
<%
    if (start_time > 0) {
      if (cs->testing_suspended) {
%><p><b><s:_>Testing of participants' submits is suspended</s:_></b></p><%
      }
      if (cs->printing_suspended) {
%><p><b><s:_>Print requests are suspended</s:_></b></p><%
      }
    }
%>

<table class="b0 info-table-line">
<tr><td class="b0"><s:_>Server time</s:_>:</td><td class="b0"><s:v value="cs->current_time" /></td></tr>
<%    if (start_time > 0) {
%><tr><td class="b0"><%
      if (cnts->exam_mode) {
%><s:_>Exam start time</s:_><%
      } else {
%><s:_>Contest start time</s:_><%
      }
%><td class="b0"><s:v value="start_time" /></td></tr><%
    }
%>
<%
    if (!global->is_virtual && start_time <= 0 && sched_time > 0) {
%><tr><td class="b0"><s:_>Planned start time</s:_>:</td><td class="b0"><s:v value="sched_time" /></td></tr><%
    }
%>
<%
    if (stop_time <= 0 && (duration > 0 || finish_time <= 0)) {
%><tr><td class="b0"><s:_>Duration</s:_>:</td><td class="b0"><%
      if (duration > 0) {
        duration_str(0, duration, 0, hbuf, 0);
%><s:v value="hbuf" escape="false" /><%
      } else {
%><s:_>Unlimited</s:_><%
      }
%></td></tr><%
    }
%>
<%
    if (start_time > 0 && stop_time <= 0 && duration > 0) {
%><tr><td class="b0"><s:_>Scheduled end time</s:_>:</td><td class="b0"><s:v value="(time_t)(start_time + duration)" /></td></tr><%
    } else if (start_time > 0 && stop_time <= 0 && duration <= 0 && finish_time > 0) {
%><tr><td class="b0"><s:_>Scheduled end time</s:_>:</td><td class="b0"><s:v value="finish_time" /></td></tr><%
    } else if (stop_time) {
%><tr><td class="b0"><s:_>End time</s:_>:</td><td class="b0"><s:v value="stop_time" /></td></tr><%
    }
%>
<%
    if (start_time > 0 && stop_time <= 0 && fog_start_time > 0 && global->score_system != SCORE_OLYMPIAD) {
%><tr><td class="b0"><s:_>Standings freeze time</s:_>:</td><td class="b0"><s:v value="fog_start_time" /></td></tr><%
    } else if (stop_time > 0 && duration > 0 && global->board_fog_time > 0 && global->score_system != SCORE_OLYMPIAD
               && global->board_unfog_time > 0 && !cs->standings_updated
               && cs->current_time < stop_time + global->board_unfog_time) {
%><tr><td class="b0"><s:_>Standings unfreeze time</s:_>:</td><td class="b0"><s:v value="(time_t)(stop_time + global->board_unfog_time)" /></td></tr><%
    }
%>
<%
    if (start_time > 0 && stop_time <= 0 && duration > 0) {
      duration_str(0, cs->current_time, start_time, hbuf, 0);
%><tr><td class="b0"><s:_>Elapsed time</s:_>:</td><td class="b0"><s:v value="hbuf" escape="false" /></td></tr>
<%      duration_str(0, start_time + duration - cs->current_time, 0, hbuf, 0);
%><tr><td class="b0"><s:_>Remaining time</s:_>:</td><td class="b0"><s:v value="hbuf" escape="false" /></td></tr>
<%    }
    if (start_time <= 0 && global->is_virtual > 0 && cnts->open_time > 0 && cs->current_time < cnts->open_time) {
%><tr><td class="b0"><s:_>Virtual contest open time</s:_>:</td><td class="b0"><s:v value="cnts->open_time" /></td></tr>
<%    }
    if (start_time <= 0 && global->is_virtual > 0 && cnts->close_time > 0) {
%><tr><td class="b0"><s:_>Virtual contest close time</s:_>:</td><td class="b0"><s:v value="cnts->close_time" /></td></tr>
<%    } %>
</table>
<%
  }
%>
<%
  if (global->description_file && global->description_file[0]) {
    watched_file_update(&cs->description, global->description_file, cs->current_time);
    if (cs->description.text) {
%><s:v value="cs->description.text" escape="false" /><%
    }
  }
%>
<%
  if (!cnts->exam_mode) {
%><p><b><s:_>On-line users in this contest</s:_>: <s:v value="phr->online_users" /></b></p>
<%    if (cs->max_online_count > 0) {
%><p><b><s:_>Max number of users was</s:_>: <s:v value="cs->max_online_count" />, <s:v value="cs->max_online_time" /></b></p>
<%
    }
  }
%>
<script>
$(function() {
  $("#virtual-stop-confirm").dialog({
    resizable: true,
    autoOpen: false,
    height: "auto",
    width: 600,
    modal: true,
    open: function() {
      //$(this).parents('.ui-dialog-buttonpane button:eq(1)').focus();
    },
    buttons: {
      "Stop the contest": function() {
        $(this).dialog("close");
        $("#virtual-stop-form").submit();
      },
      Cancel: function() {
        $(this).dialog("close");
      }
    }
  });
  $("#virtual-stop-button").on("click", function(event) {
    $("#virtual-stop-confirm").dialog("open");
    event.preventDefault();
    return false;
  });
});
</script>

<div id="virtual-stop-confirm" title="<s:_>Stop virtual contest?</s:_>">
<p><span class="ui-icon ui-icon-alert" style="float:left; margin:12px 12px 20px 0;"></span>Are you sure you want to stop your virtual contest?</p>
</div>

<%
  if (!cnts->exam_mode && global->is_virtual && start_time <= 0) {
    enable_virtual_start = 1;
    if (contest_start_time <= 0 || contest_stop_time > 0) {
      enable_virtual_start = 0;
    } else if (global->disable_virtual_start > 0 || cs->disable_virtual_start > 0) {
      enable_virtual_start = 0;
    } else if (cnts->open_time > 0 && cs->current_time < cnts->open_time) {
      enable_virtual_start = 0;
    } else if (cnts->close_time > 0 && cs->current_time >= cnts->close_time) {
      enable_virtual_start = 0;
    } else if (cs->upsolving_mode) {
      enable_virtual_start = 0;
    }
    if (enable_virtual_start) {
%><s:form><%
      if (cnts->exam_mode) {
%><p><s:submit ac="virtual-start" label="Start exam" /></p><%
      } else {
%><p><s:submit ac="virtual-start" /></p><%
      }
%></s:form><%
    }
  } else if (!cnts->exam_mode && global->is_virtual && stop_time <= 0) {
%><s:form id="virtual-stop-form">
<s:hidden name="action" ac="virtual-stop" /><%
    if (cnts->exam_mode) {
%><p><button class="ui-button ui-widget" id="virtual-stop-button"><s:_>Stop exam</s:_></button></p><%
    } else {
%><p><button class="ui-button ui-widget" id="virtual-stop-button"><s:_>Stop virtual contest</s:_></button></p><%
    }
%></s:form><%
  } else if (!cnts->exam_mode && global->is_virtual && start_time > 0 && stop_time > 0 && global->enable_virtual_restart > 0 && !cs->upsolving_mode) {
%><p><s:form><s:submit ac="virtual-restart" /></s:form></p>
<p><b><s:_>ALL PREVIOUS SUBMITS WILL BE LOST!</s:_></b></p><%
  }
%>

<script language="javascript">
function setOperationVisibility(oper, value)
{
  obj1 = document.getElementById("Show" + oper);
  obj2 = document.getElementById("Hide" + oper);
  if (value) {
    obj1.style.display = "none";
    obj2.style.display = "";
  } else {
    obj1.style.display = "";
    obj2.style.display = "none";
  }
}
</script>

<div id="ShowOptions"><a onclick="setOperationVisibility('Options', true)">[<s:_>Compiler options</s:_>]</a></div>
<div style="display: none;" id="HideOptions"><a onclick="setOperationVisibility('Options', false)">[<s:_>Hide compiler options</s:_>]</a><br/>
<table class="b0">
<%
  int cur_lang_id;
  for (cur_lang_id = 1; cur_lang_id <= cs->max_lang; ++cur_lang_id) {
    const struct section_language_data *lang = cs->langs[cur_lang_id];
    if (!lang || lang->disabled > 0) continue;
    if (lang->enable_custom > 0) continue;
    const unsigned char *opts = serve_get_compiler_options(phr->config, cs, cur_lang_id);
%>
  <tr>
    <td class="b0"><tt><s:v value="lang->short_name" /></tt></td>
    <td class="b0"><s:v value="lang->long_name" /></td>
    <td class="b0"><tt><s:v value="opts" /></tt></td>
  </tr>
<%
  }
%>
</table>
</div>

<p><s:a ac="api-keys-page">[API keys]</s:a></p>
